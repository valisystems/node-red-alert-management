[{"id":"22184036.68c498","type":"function","z":"89fb7740.9522a8","name":"Control Button Messages","func":"// this branch is used to send URL only \n//  for battery state update\n\nvar AUTHKEY = \"666777888\";\nvar CMD = \"onoff\";\nvar DURATION = 9000; // fill duration of the PIN press\n\nvar GPIO_MAGNET = \"P1Pin33\"; // fill PIN for magnet\nvar GPIO_BUTTON_PRESSED = \"P1Pin32\"; // fill PIN for button pressed\nvar GPIO_TAMPER = \"P1Pin38\"; // fill PIN for tamper\n// fill MAC : PIN key/value pairs to call an appropriate PIN for each button MAC\nvar LOOKUP_BATTERY_GPIO = {\n    \"4491600000f7c678\" : \"P1Pin38\", // 001\n    \"4491600000f7c537\" : \"P1Pin38\",\n    \"4491600000f7c4de\" : \"P1Pin38\",\n    \"4491600000f7c07d\" : \"P1Pin38\",\n    \"4491600000f7c523\" : \"P1Pin38\",\n    \"4491600000f7c5cb\" : \"P1Pin38\",\n    \"4491600000f7c545\" : \"P1Pin38\",\n    \"4491600000f7c026\" : \"P1Pin38\",\n    \"4491600000f7c5e2\" : \"P1Pin38\" // 009\n};\n\nvar URL = \"http://192.168.10.175:8585\";\n\n// remove unwanted characters from strings\nmsg.deveui = (msg.deveui).replace(/-/g, '');\nmsg.eui = (msg.eui).replace(/-/g, '');\n\nvar bf = new Buffer(msg.payload)\nvar msgmod = bf.toString('hex');\n\nvar type = msgmod.substr(2, 2);\n\nmsg.url = \"\";\n\nif (type == \"07\") {\n    // button pressed\n    msg.url = URL + \"/api/remote?auth=\" + AUTHKEY + \n        \"&cmd=\" + CMD + \n        \"&gpio=\" + GPIO_BUTTON_PRESSED;\n}\nelse if (type == \"fd\") {\n    // magnet\n    msg.url = URL + \"/api/remote?auth=\" + AUTHKEY + \n        \"&cmd=\" + CMD + \n        \"&gpio=\" + GPIO_MAGNET;\n}\nelse if (type == \"02\") {\n    // tamper\n    var tamperStatus = msgmod.substr(4, 2);\n    if (tamperStatus == \"00\") {\n        // opened, generate url\n        msg.url = URL + \"/api/remote?auth=\" + AUTHKEY + \n        \"&cmd=\" + CMD + \n        \"&gpio=\" + GPIO_TAMPER;\n    }\n    else if (tamperStatus == \"01\") {\n        // closed\n    }\n}\nelse if (type == \"01\") {\n    // supervisory\n    var errorCode = msgmod.substr(4, 2);\n    var sensorState = msgmod.substr(6, 2);\n    var batteryLevel = msgmod.substr(8, 2);\n    \n    var intErrorCode = parseInt(errorCode, 16);\n    if (intErrorCode & 2 >> 1) {\n        // battery below 2.8 volts\n\t\t\n\t\tif (msg.deveui in LOOKUP_BATTERY_GPIO) {\n\t\t\tvar gpio = LOOKUP_BATTERY_GPIO[msg.deveui];\n\n\t\t\tmsg.url = URL + \"/api/remote?auth=\" + AUTHKEY + \n\t\t\t\t\"&cmd=\" + CMD + \n\t\t\t\t\"&gpio=\" + gpio;\n\n\t\t}\n    }\n}\n\nif (msg.url && msg.url.length > 0) {\n\tmsg.payload = \"\";\n    return msg;\n}\n","outputs":1,"noerr":0,"x":960,"y":280,"wires":[[]]}]